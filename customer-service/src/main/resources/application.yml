server:
  port: 9091
spring:
  threads:
    virtual:
      enabled: true
  application:
    name: customer-service
  jpa:
    show-sql: false
    open-in-view: false
    hibernate:
      ddl-auto: update
      use-new-id-generator-mappings: true
    generate-ddl: true
  datasource:
    url: jdbc:postgresql://localhost:5433/postgres
    username: postgres
    password: postgres
  cloud:
    consul:
      host: ${CONSUL_HOST:localhost}
      port: ${CONSUL_PORT:8500}
    function:
      definition: handleReserveCustomerBalanceRequest;handleCompensateCustomerBalanceRequest
    stream:
      kafka:
        binder:
          brokers: localhost:9092
      bindings:
        handleReserveCustomerBalanceRequest-in-0:
          destination: ORDER.events
        handleCompensateCustomerBalanceRequest-in-0:
          destination: ORDER.events

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application-name: ${spring.application.name}
  prometheus:
    metrics:
      export:
        enabled: true
        step: 1m
  tracing:
    sampling:
      probability: 1.0
logging:
  pattern:
    correlation: "[${spring.application.name:},%X{traceId:-},%X{spanId:-}] "
  include-application-name: false